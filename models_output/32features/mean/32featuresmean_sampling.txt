####################   lr    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.785     0.716     0.749      1010
         1.0      0.739     0.804     0.770      1010

    accuracy                          0.760      2020
   macro avg      0.762     0.760     0.759      2020
weighted avg      0.762     0.760     0.759      2020

auc macro 0.853
confusion matrix
[[723 287]
 [198 812]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.372     0.664     0.477       149
         1.0      0.948     0.844     0.893      1072

    accuracy                          0.822      1221
   macro avg      0.660     0.754     0.685      1221
weighted avg      0.877     0.822     0.842      1221

auc macro 0.840
confusion matrix
[[ 99  50]
 [167 905]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 25, 17, 2, 26, 27, 28, 29, 30])],
                  verbose_feature_names_out=False)), ('model', LogisticRegression(C=8, class_weight='balanced', dual=True, max_iter=341,
                   solver='liblinear'))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 25, 17, 2, 26, 27, 28, 29, 30])],
                  verbose_feature_names_out=False), 'model': LogisticRegression(C=8, class_weight='balanced', dual=True, max_iter=341,
                   solver='liblinear'), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 25, 17, 2, 26, 27, 28, 29, 30])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__C': 8, 'model__class_weight': 'balanced', 'model__dual': True, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__l1_ratio': None, 'model__max_iter': 341, 'model__multi_class': 'auto', 'model__n_jobs': None, 'model__penalty': 'l2', 'model__random_state': None, 'model__solver': 'liblinear', 'model__tol': 0.0001, 'model__verbose': 0, 'model__warm_start': False}
####################   lr  END   #########################
####################   svc    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.798     0.621     0.698      1442
         1.0      0.690     0.843     0.758      1442

    accuracy                          0.732      2884
   macro avg      0.744     0.732     0.728      2884
weighted avg      0.744     0.732     0.728      2884

auc macro 0.836
confusion matrix
[[ 895  547]
 [ 227 1215]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.386     0.604     0.471       149
         1.0      0.940     0.867     0.902      1072

    accuracy                          0.835      1221
   macro avg      0.663     0.735     0.687      1221
weighted avg      0.873     0.835     0.849      1221

auc macro 0.810
confusion matrix
[[ 90  59]
 [143 929]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 25, 17, 2, 26, 27, 28, 29, 30])],
                  verbose_feature_names_out=False)), ('model', SVC(C=129, class_weight='balanced', coef0=0.8854435276612823, degree=128,
    max_iter=1600, probability=True))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 25, 17, 2, 26, 27, 28, 29, 30])],
                  verbose_feature_names_out=False), 'model': SVC(C=129, class_weight='balanced', coef0=0.8854435276612823, degree=128,
    max_iter=1600, probability=True), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 25, 17, 2, 26, 27, 28, 29, 30])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__C': 129, 'model__break_ties': False, 'model__cache_size': 200, 'model__class_weight': 'balanced', 'model__coef0': 0.8854435276612823, 'model__decision_function_shape': 'ovr', 'model__degree': 128, 'model__gamma': 'scale', 'model__kernel': 'rbf', 'model__max_iter': 1600, 'model__probability': True, 'model__random_state': None, 'model__shrinking': True, 'model__tol': 0.001, 'model__verbose': False}
####################   svc  END   #########################
####################   rf    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.977     0.941     0.959      1262
         1.0      0.943     0.978     0.960      1262

    accuracy                          0.960      2524
   macro avg      0.960     0.960     0.960      2524
weighted avg      0.960     0.960     0.960      2524

auc macro 0.994
confusion matrix
[[1188   74]
 [  28 1234]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.449     0.537     0.489       149
         1.0      0.934     0.909     0.921      1072

    accuracy                          0.863      1221
   macro avg      0.692     0.723     0.705      1221
weighted avg      0.875     0.863     0.868      1221

auc macro 0.848
confusion matrix
[[ 80  69]
 [ 98 974]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 25, 17, 2, 26, 27, 28, 29, 30])],
                  verbose_feature_names_out=False)), ('model', RandomForestClassifier(class_weight='balanced', max_features='log2',
                       min_samples_leaf=4, min_samples_split=4,
                       n_estimators=103))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 25, 17, 2, 26, 27, 28, 29, 30])],
                  verbose_feature_names_out=False), 'model': RandomForestClassifier(class_weight='balanced', max_features='log2',
                       min_samples_leaf=4, min_samples_split=4,
                       n_estimators=103), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 25, 17, 2, 26, 27, 28, 29, 30])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__bootstrap': True, 'model__ccp_alpha': 0.0, 'model__class_weight': 'balanced', 'model__criterion': 'gini', 'model__max_depth': None, 'model__max_features': 'log2', 'model__max_leaf_nodes': None, 'model__max_samples': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 4, 'model__min_samples_split': 4, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 103, 'model__n_jobs': None, 'model__oob_score': False, 'model__random_state': None, 'model__verbose': 0, 'model__warm_start': False}
####################   rf  END   #########################
####################   adaboost    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.873     0.835     0.854      1683
         1.0      0.842     0.878     0.860      1683

    accuracy                          0.857      3366
   macro avg      0.857     0.857     0.857      3366
weighted avg      0.857     0.857     0.857      3366

auc macro 0.938
confusion matrix
[[1406  277]
 [ 205 1478]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.423     0.570     0.486       149
         1.0      0.937     0.892     0.914      1072

    accuracy                          0.853      1221
   macro avg      0.680     0.731     0.700      1221
weighted avg      0.874     0.853     0.862      1221

auc macro 0.826
confusion matrix
[[ 85  64]
 [116 956]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 25, 17, 2, 26, 27, 28, 29, 30])],
                  verbose_feature_names_out=False)), ('model', AdaBoostClassifier(learning_rate=1.1746670691763248, n_estimators=27))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 25, 17, 2, 26, 27, 28, 29, 30])],
                  verbose_feature_names_out=False), 'model': AdaBoostClassifier(learning_rate=1.1746670691763248, n_estimators=27), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 25, 17, 2, 26, 27, 28, 29, 30])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__algorithm': 'SAMME.R', 'model__base_estimator': None, 'model__learning_rate': 1.1746670691763248, 'model__n_estimators': 27, 'model__random_state': None}
####################   adaboost  END   #########################
####################   nn    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.856     0.861     0.858      2020
         1.0      0.860     0.855     0.857      2020

    accuracy                          0.858      4040
   macro avg      0.858     0.858     0.858      4040
weighted avg      0.858     0.858     0.858      4040

auc macro 0.930
confusion matrix
[[1739  281]
 [ 293 1727]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.401     0.624     0.488       149
         1.0      0.943     0.870     0.905      1072

    accuracy                          0.840      1221
   macro avg      0.672     0.747     0.697      1221
weighted avg      0.877     0.840     0.854      1221

auc macro 0.847
confusion matrix
[[ 93  56]
 [139 933]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 25, 17, 2, 26, 27, 28, 29, 30])],
                  verbose_feature_names_out=False)), ('model', MLPClassifier(alpha=0.3783029838679969, early_stopping=True,
              hidden_layer_sizes=[296, 52], learning_rate='adaptive',
              learning_rate_init=0.0024369914243839988, max_iter=395))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 25, 17, 2, 26, 27, 28, 29, 30])],
                  verbose_feature_names_out=False), 'model': MLPClassifier(alpha=0.3783029838679969, early_stopping=True,
              hidden_layer_sizes=[296, 52], learning_rate='adaptive',
              learning_rate_init=0.0024369914243839988, max_iter=395), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 25, 17, 2, 26, 27, 28, 29, 30])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__activation': 'relu', 'model__alpha': 0.3783029838679969, 'model__batch_size': 'auto', 'model__beta_1': 0.9, 'model__beta_2': 0.999, 'model__early_stopping': True, 'model__epsilon': 1e-08, 'model__hidden_layer_sizes': [296, 52], 'model__learning_rate': 'adaptive', 'model__learning_rate_init': 0.0024369914243839988, 'model__max_fun': 15000, 'model__max_iter': 395, 'model__momentum': 0.9, 'model__n_iter_no_change': 10, 'model__nesterovs_momentum': True, 'model__power_t': 0.5, 'model__random_state': None, 'model__shuffle': True, 'model__solver': 'adam', 'model__tol': 0.0001, 'model__validation_fraction': 0.1, 'model__verbose': False, 'model__warm_start': False}
####################   nn  END   #########################
####################   gb    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.936     0.889     0.912      1442
         1.0      0.894     0.940     0.916      1442

    accuracy                          0.914      2884
   macro avg      0.915     0.914     0.914      2884
weighted avg      0.915     0.914     0.914      2884

auc macro 0.972
confusion matrix
[[1282  160]
 [  87 1355]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.453     0.523     0.486       149
         1.0      0.932     0.912     0.922      1072

    accuracy                          0.865      1221
   macro avg      0.693     0.718     0.704      1221
weighted avg      0.874     0.865     0.869      1221

auc macro 0.840
confusion matrix
[[ 78  71]
 [ 94 978]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 25, 17, 2, 26, 27, 28, 29, 30])],
                  verbose_feature_names_out=False)), ('model', GradientBoostingClassifier(learning_rate=0.14305020389323359, n_estimators=84,
                           subsample=0.5))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 25, 17, 2, 26, 27, 28, 29, 30])],
                  verbose_feature_names_out=False), 'model': GradientBoostingClassifier(learning_rate=0.14305020389323359, n_estimators=84,
                           subsample=0.5), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 25, 17, 2, 26, 27, 28, 29, 30])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__ccp_alpha': 0.0, 'model__criterion': 'friedman_mse', 'model__init': None, 'model__learning_rate': 0.14305020389323359, 'model__loss': 'deviance', 'model__max_depth': 3, 'model__max_features': None, 'model__max_leaf_nodes': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 84, 'model__n_iter_no_change': None, 'model__random_state': None, 'model__subsample': 0.5, 'model__tol': 0.0001, 'model__validation_fraction': 0.1, 'model__verbose': 0, 'model__warm_start': False}
####################   gb  END   #########################
