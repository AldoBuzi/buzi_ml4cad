####################   svc    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.808     0.805     0.806      1423
         1.0      0.806     0.808     0.807      1423

    accuracy                          0.807      2846
   macro avg      0.807     0.807     0.807      2846
weighted avg      0.807     0.807     0.807      2846

auc macro 0.888
confusion matrix
[[1146  277]
 [ 273 1150]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.289     0.692     0.407       143
         1.0      0.950     0.772     0.852      1072

    accuracy                          0.763      1215
   macro avg      0.619     0.732     0.630      1215
weighted avg      0.872     0.763     0.800      1215

auc macro 0.806
confusion matrix
[[ 99  44]
 [244 828]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False)), ('model', SVC(C=418, class_weight='balanced', coef0=0.620625258930853, degree=100,
    gamma='auto', max_iter=800, probability=True))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False), 'model': SVC(C=418, class_weight='balanced', coef0=0.620625258930853, degree=100,
    gamma='auto', max_iter=800, probability=True), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 16, 8, 17, 18, 19, 20, 21])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__C': 418, 'model__break_ties': False, 'model__cache_size': 200, 'model__class_weight': 'balanced', 'model__coef0': 0.620625258930853, 'model__decision_function_shape': 'ovr', 'model__degree': 100, 'model__gamma': 'auto', 'model__kernel': 'rbf', 'model__max_iter': 800, 'model__probability': True, 'model__random_state': None, 'model__shrinking': True, 'model__tol': 0.001, 'model__verbose': False}
####################   svc  END   #########################
####################   rf    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.987     0.947     0.966      1708
         1.0      0.949     0.987     0.968      1708

    accuracy                          0.967      3416
   macro avg      0.968     0.967     0.967      3416
weighted avg      0.968     0.967     0.967      3416

auc macro 0.997
confusion matrix
[[1617   91]
 [  22 1686]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.492     0.441     0.465       143
         1.0      0.926     0.939     0.933      1072

    accuracy                          0.881      1215
   macro avg      0.709     0.690     0.699      1215
weighted avg      0.875     0.881     0.878      1215

auc macro 0.826
confusion matrix
[[  63   80]
 [  65 1007]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False)), ('model', RandomForestClassifier(class_weight='balanced', criterion='entropy',
                       max_features='log2', min_samples_leaf=4,
                       n_estimators=61))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False), 'model': RandomForestClassifier(class_weight='balanced', criterion='entropy',
                       max_features='log2', min_samples_leaf=4,
                       n_estimators=61), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 16, 8, 17, 18, 19, 20, 21])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__bootstrap': True, 'model__ccp_alpha': 0.0, 'model__class_weight': 'balanced', 'model__criterion': 'entropy', 'model__max_depth': None, 'model__max_features': 'log2', 'model__max_leaf_nodes': None, 'model__max_samples': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 4, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 61, 'model__n_jobs': None, 'model__oob_score': False, 'model__random_state': None, 'model__verbose': 0, 'model__warm_start': False}
####################   rf  END   #########################
####################   adaboost    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.930     0.865     0.896      1708
         1.0      0.874     0.934     0.903      1708

    accuracy                          0.900      3416
   macro avg      0.902     0.900     0.900      3416
weighted avg      0.902     0.900     0.900      3416

auc macro 0.962
confusion matrix
[[1478  230]
 [ 112 1596]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.461     0.455     0.458       143
         1.0      0.927     0.929     0.928      1072

    accuracy                          0.873      1215
   macro avg      0.694     0.692     0.693      1215
weighted avg      0.872     0.873     0.873      1215

auc macro 0.810
confusion matrix
[[ 65  78]
 [ 76 996]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False)), ('model', AdaBoostClassifier(learning_rate=1.1916503309286282, n_estimators=65))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False), 'model': AdaBoostClassifier(learning_rate=1.1916503309286282, n_estimators=65), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 16, 8, 17, 18, 19, 20, 21])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__algorithm': 'SAMME.R', 'model__base_estimator': None, 'model__learning_rate': 1.1916503309286282, 'model__n_estimators': 65, 'model__random_state': None}
####################   adaboost  END   #########################
####################   nn    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.985     0.950     0.967      2135
         1.0      0.952     0.986     0.968      2135

    accuracy                          0.968      4270
   macro avg      0.969     0.968     0.968      4270
weighted avg      0.969     0.968     0.968      4270

auc macro 0.993
confusion matrix
[[2028  107]
 [  30 2105]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.383     0.399     0.390       143
         1.0      0.919     0.914     0.917      1072

    accuracy                          0.853      1215
   macro avg      0.651     0.656     0.654      1215
weighted avg      0.856     0.853     0.855      1215

auc macro 0.773
confusion matrix
[[ 57  86]
 [ 92 980]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False)), ('model', MLPClassifier(alpha=0.165752231993488, early_stopping=True,
              hidden_layer_sizes=[262, 63], learning_rate='adaptive',
              learning_rate_init=0.0026264621646941563, max_iter=342))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False), 'model': MLPClassifier(alpha=0.165752231993488, early_stopping=True,
              hidden_layer_sizes=[262, 63], learning_rate='adaptive',
              learning_rate_init=0.0026264621646941563, max_iter=342), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 16, 8, 17, 18, 19, 20, 21])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__activation': 'relu', 'model__alpha': 0.165752231993488, 'model__batch_size': 'auto', 'model__beta_1': 0.9, 'model__beta_2': 0.999, 'model__early_stopping': True, 'model__epsilon': 1e-08, 'model__hidden_layer_sizes': [262, 63], 'model__learning_rate': 'adaptive', 'model__learning_rate_init': 0.0026264621646941563, 'model__max_fun': 15000, 'model__max_iter': 342, 'model__momentum': 0.9, 'model__n_iter_no_change': 10, 'model__nesterovs_momentum': True, 'model__power_t': 0.5, 'model__random_state': None, 'model__shuffle': True, 'model__solver': 'adam', 'model__tol': 0.0001, 'model__validation_fraction': 0.1, 'model__verbose': False, 'model__warm_start': False}
####################   nn  END   #########################
####################   gb    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.935     0.904     0.919      2135
         1.0      0.907     0.937     0.921      2135

    accuracy                          0.920      4270
   macro avg      0.921     0.920     0.920      4270
weighted avg      0.921     0.920     0.920      4270

auc macro 0.973
confusion matrix
[[1929  206]
 [ 135 2000]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.445     0.510     0.476       143
         1.0      0.933     0.915     0.924      1072

    accuracy                          0.867      1215
   macro avg      0.689     0.713     0.700      1215
weighted avg      0.876     0.867     0.871      1215

auc macro 0.820
confusion matrix
[[ 73  70]
 [ 91 981]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False)), ('model', GradientBoostingClassifier(learning_rate=0.09185154934574266, n_estimators=84,
                           subsample=0.25))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False), 'model': GradientBoostingClassifier(learning_rate=0.09185154934574266, n_estimators=84,
                           subsample=0.25), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 16, 8, 17, 18, 19, 20, 21])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__ccp_alpha': 0.0, 'model__criterion': 'friedman_mse', 'model__init': None, 'model__learning_rate': 0.09185154934574266, 'model__loss': 'deviance', 'model__max_depth': 3, 'model__max_features': None, 'model__max_leaf_nodes': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 84, 'model__n_iter_no_change': None, 'model__random_state': None, 'model__subsample': 0.25, 'model__tol': 0.0001, 'model__validation_fraction': 0.1, 'model__verbose': 0, 'model__warm_start': False}
####################   gb  END   #########################
