####################   lr    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.853     0.850     0.851      3494
         1.0      0.851     0.853     0.852      3494

    accuracy                          0.852      6988
   macro avg      0.852     0.852     0.852      6988
weighted avg      0.852     0.852     0.852      6988

auc macro 0.928
confusion matrix
[[2970  524]
 [ 512 2982]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.394     0.675     0.498       169
         1.0      0.947     0.850     0.896      1165

    accuracy                          0.828      1334
   macro avg      0.671     0.762     0.697      1334
weighted avg      0.877     0.828     0.845      1334

auc macro 0.845
confusion matrix
[[114  55]
 [175 990]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False)), ('model', LogisticRegression(C=8, class_weight='balanced', dual=True, max_iter=88,
                   solver='liblinear', warm_start=True))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False), 'model': LogisticRegression(C=8, class_weight='balanced', dual=True, max_iter=88,
                   solver='liblinear', warm_start=True), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 16, 8, 17, 18, 19, 20, 21])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__C': 8, 'model__class_weight': 'balanced', 'model__dual': True, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__l1_ratio': None, 'model__max_iter': 88, 'model__multi_class': 'auto', 'model__n_jobs': None, 'model__penalty': 'l2', 'model__random_state': None, 'model__solver': 'liblinear', 'model__tol': 0.0001, 'model__verbose': 0, 'model__warm_start': True}
####################   lr  END   #########################
####################   svc    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.911     0.796     0.850      3494
         1.0      0.819     0.922     0.867      3494

    accuracy                          0.859      6988
   macro avg      0.865     0.859     0.858      6988
weighted avg      0.865     0.859     0.858      6988

auc macro 0.949
confusion matrix
[[2782  712]
 [ 273 3221]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.386     0.462     0.420       169
         1.0      0.920     0.894     0.906      1165

    accuracy                          0.839      1334
   macro avg      0.653     0.678     0.663      1334
weighted avg      0.852     0.839     0.845      1334

auc macro 0.766
confusion matrix
[[  78   91]
 [ 124 1041]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False)), ('model', SVC(C=112, class_weight='balanced', coef0=0.14936365745985447, degree=91,
    gamma='auto', max_iter=1600, probability=True))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False), 'model': SVC(C=112, class_weight='balanced', coef0=0.14936365745985447, degree=91,
    gamma='auto', max_iter=1600, probability=True), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 16, 8, 17, 18, 19, 20, 21])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__C': 112, 'model__break_ties': False, 'model__cache_size': 200, 'model__class_weight': 'balanced', 'model__coef0': 0.14936365745985447, 'model__decision_function_shape': 'ovr', 'model__degree': 91, 'model__gamma': 'auto', 'model__kernel': 'rbf', 'model__max_iter': 1600, 'model__probability': True, 'model__random_state': None, 'model__shrinking': True, 'model__tol': 0.001, 'model__verbose': False}
####################   svc  END   #########################
####################   knn    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.880     0.986     0.930      3494
         1.0      0.984     0.865     0.921      3494

    accuracy                          0.926      6988
   macro avg      0.932     0.926     0.925      6988
weighted avg      0.932     0.926     0.925      6988

auc macro 0.994
confusion matrix
[[3446   48]
 [ 471 3023]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.315     0.598     0.412       169
         1.0      0.933     0.811     0.868      1165

    accuracy                          0.784      1334
   macro avg      0.624     0.704     0.640      1334
weighted avg      0.855     0.784     0.810      1334

auc macro 0.739
confusion matrix
[[101  68]
 [220 945]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False)), ('model', KNeighborsClassifier(algorithm='ball_tree', leaf_size=27, n_neighbors=4))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False), 'model': KNeighborsClassifier(algorithm='ball_tree', leaf_size=27, n_neighbors=4), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 16, 8, 17, 18, 19, 20, 21])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__algorithm': 'ball_tree', 'model__leaf_size': 27, 'model__metric': 'minkowski', 'model__metric_params': None, 'model__n_jobs': None, 'model__n_neighbors': 4, 'model__p': 2, 'model__weights': 'uniform'}
####################   knn  END   #########################
####################   nn    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.936     0.948     0.942      3494
         1.0      0.948     0.935     0.941      3494

    accuracy                          0.942      6988
   macro avg      0.942     0.942     0.942      6988
weighted avg      0.942     0.942     0.942      6988

auc macro 0.980
confusion matrix
[[3314  180]
 [ 228 3266]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.423     0.556     0.481       169
         1.0      0.933     0.890     0.911      1165

    accuracy                          0.848      1334
   macro avg      0.678     0.723     0.696      1334
weighted avg      0.868     0.848     0.856      1334

auc macro 0.812
confusion matrix
[[  94   75]
 [ 128 1037]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False)), ('model', MLPClassifier(alpha=0.23792386236578777, early_stopping=True,
              hidden_layer_sizes=[260, 104], learning_rate='adaptive',
              learning_rate_init=0.00447584800307998, max_iter=322))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False), 'model': MLPClassifier(alpha=0.23792386236578777, early_stopping=True,
              hidden_layer_sizes=[260, 104], learning_rate='adaptive',
              learning_rate_init=0.00447584800307998, max_iter=322), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 16, 8, 17, 18, 19, 20, 21])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__activation': 'relu', 'model__alpha': 0.23792386236578777, 'model__batch_size': 'auto', 'model__beta_1': 0.9, 'model__beta_2': 0.999, 'model__early_stopping': True, 'model__epsilon': 1e-08, 'model__hidden_layer_sizes': [260, 104], 'model__learning_rate': 'adaptive', 'model__learning_rate_init': 0.00447584800307998, 'model__max_fun': 15000, 'model__max_iter': 322, 'model__momentum': 0.9, 'model__n_iter_no_change': 10, 'model__nesterovs_momentum': True, 'model__power_t': 0.5, 'model__random_state': None, 'model__shuffle': True, 'model__solver': 'adam', 'model__tol': 0.0001, 'model__validation_fraction': 0.1, 'model__verbose': False, 'model__warm_start': False}
####################   nn  END   #########################
####################   xgb    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.869     0.946     0.906      3494
         1.0      0.941     0.857     0.897      3494

    accuracy                          0.902      6988
   macro avg      0.905     0.902     0.902      6988
weighted avg      0.905     0.902     0.902      6988

auc macro 0.975
confusion matrix
[[3307  187]
 [ 499 2995]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.428     0.680     0.525       169
         1.0      0.949     0.868     0.907      1165

    accuracy                          0.844      1334
   macro avg      0.688     0.774     0.716      1334
weighted avg      0.883     0.844     0.858      1334

auc macro 0.838
confusion matrix
[[ 115   54]
 [ 154 1011]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False)), ('model', XGBClassifier(alpha=0.01663395359181813, eta=0.14103350211484378,
              gamma=0.1298164467086266, lambda=0.6102153476388419, max_depth=2,
              missing=nan, n_estimators=88, scale_pos_weight=0.4,
              subsample=0.5))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False), 'model': XGBClassifier(alpha=0.01663395359181813, eta=0.14103350211484378,
              gamma=0.1298164467086266, lambda=0.6102153476388419, max_depth=2,
              missing=nan, n_estimators=88, scale_pos_weight=0.4,
              subsample=0.5), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 16, 8, 17, 18, 19, 20, 21])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__base_score': 0.5, 'model__booster': 'gbtree', 'model__colsample_bylevel': 1, 'model__colsample_bynode': 1, 'model__colsample_bytree': 1, 'model__gamma': 0.1298164467086266, 'model__learning_rate': 0.1, 'model__max_delta_step': 0, 'model__max_depth': 2, 'model__min_child_weight': 1, 'model__missing': nan, 'model__n_estimators': 88, 'model__n_jobs': 1, 'model__nthread': None, 'model__objective': 'binary:logistic', 'model__random_state': 0, 'model__reg_alpha': 0, 'model__reg_lambda': 1, 'model__scale_pos_weight': 0.4, 'model__seed': None, 'model__silent': None, 'model__subsample': 0.5, 'model__verbosity': 1, 'model__alpha': 0.01663395359181813, 'model__eta': 0.14103350211484378, 'model__lambda': 0.6102153476388419}
####################   xgb  END   #########################
