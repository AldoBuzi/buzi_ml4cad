####################   lr    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.856     0.853     0.855      3494
         1.0      0.854     0.856     0.855      3494

    accuracy                          0.855      6988
   macro avg      0.855     0.855     0.855      6988
weighted avg      0.855     0.855     0.855      6988

auc macro 0.928
confusion matrix
[[2982  512]
 [ 503 2991]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.381     0.604     0.468       149
         1.0      0.940     0.864     0.900      1072

    accuracy                          0.832      1221
   macro avg      0.661     0.734     0.684      1221
weighted avg      0.872     0.832     0.848      1221

auc macro 0.831
confusion matrix
[[ 90  59]
 [146 926]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False)), ('model', LogisticRegression(C=7, class_weight='balanced', dual=True, max_iter=50,
                   solver='liblinear'))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False), 'model': LogisticRegression(C=7, class_weight='balanced', dual=True, max_iter=50,
                   solver='liblinear'), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 16, 8, 17, 18, 19, 20, 21])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__C': 7, 'model__class_weight': 'balanced', 'model__dual': True, 'model__fit_intercept': True, 'model__intercept_scaling': 1, 'model__l1_ratio': None, 'model__max_iter': 50, 'model__multi_class': 'auto', 'model__n_jobs': None, 'model__penalty': 'l2', 'model__random_state': None, 'model__solver': 'liblinear', 'model__tol': 0.0001, 'model__verbose': 0, 'model__warm_start': False}
####################   lr  END   #########################
####################   svc    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.867     0.748     0.803      3494
         1.0      0.779     0.885     0.829      3494

    accuracy                          0.817      6988
   macro avg      0.823     0.817     0.816      6988
weighted avg      0.823     0.817     0.816      6988

auc macro 0.905
confusion matrix
[[2615  879]
 [ 401 3093]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.365     0.483     0.416       149
         1.0      0.925     0.883     0.904      1072

    accuracy                          0.835      1221
   macro avg      0.645     0.683     0.660      1221
weighted avg      0.857     0.835     0.844      1221

auc macro 0.747
confusion matrix
[[ 72  77]
 [125 947]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False)), ('model', SVC(C=148, class_weight='balanced', coef0=0.7937729590829007, degree=167,
    gamma='auto', max_iter=1600, probability=True))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False), 'model': SVC(C=148, class_weight='balanced', coef0=0.7937729590829007, degree=167,
    gamma='auto', max_iter=1600, probability=True), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 16, 8, 17, 18, 19, 20, 21])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__C': 148, 'model__break_ties': False, 'model__cache_size': 200, 'model__class_weight': 'balanced', 'model__coef0': 0.7937729590829007, 'model__decision_function_shape': 'ovr', 'model__degree': 167, 'model__gamma': 'auto', 'model__kernel': 'rbf', 'model__max_iter': 1600, 'model__probability': True, 'model__random_state': None, 'model__shrinking': True, 'model__tol': 0.001, 'model__verbose': False}
####################   svc  END   #########################
####################   knn    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.864     0.993     0.924      3494
         1.0      0.991     0.843     0.911      3494

    accuracy                          0.918      6988
   macro avg      0.928     0.918     0.918      6988
weighted avg      0.928     0.918     0.918      6988

auc macro 0.995
confusion matrix
[[3468   26]
 [ 547 2947]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.273     0.591     0.374       149
         1.0      0.932     0.782     0.850      1072

    accuracy                          0.758      1221
   macro avg      0.603     0.686     0.612      1221
weighted avg      0.852     0.758     0.792      1221

auc macro 0.712
confusion matrix
[[ 88  61]
 [234 838]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False)), ('model', KNeighborsClassifier(algorithm='ball_tree', leaf_size=47, n_neighbors=4))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False), 'model': KNeighborsClassifier(algorithm='ball_tree', leaf_size=47, n_neighbors=4), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 16, 8, 17, 18, 19, 20, 21])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__algorithm': 'ball_tree', 'model__leaf_size': 47, 'model__metric': 'minkowski', 'model__metric_params': None, 'model__n_jobs': None, 'model__n_neighbors': 4, 'model__p': 2, 'model__weights': 'uniform'}
####################   knn  END   #########################
####################   xgb    #########################
Testing on training set:
              precision    recall  f1-score   support

         0.0      0.869     0.947     0.906      3494
         1.0      0.942     0.857     0.897      3494

    accuracy                          0.902      6988
   macro avg      0.905     0.902     0.902      6988
weighted avg      0.905     0.902     0.902      6988

auc macro 0.976
confusion matrix
[[3310  184]
 [ 501 2993]]
Testing on validation set:
              precision    recall  f1-score   support

         0.0      0.401     0.597     0.480       149
         1.0      0.940     0.876     0.907      1072

    accuracy                          0.842      1221
   macro avg      0.670     0.737     0.693      1221
weighted avg      0.874     0.842     0.855      1221

auc macro 0.837
confusion matrix
[[ 89  60]
 [133 939]]
Parameters: {'memory': None, 'steps': [('preprocess', ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False)), ('model', XGBClassifier(alpha=0.06894819970410404, booster='dart',
              eta=0.09428791561963863, gamma=0.1663660901938827,
              lambda=0.9468305193894822, max_depth=2, missing=nan,
              n_estimators=94, scale_pos_weight=0.4, subsample=0.25))], 'verbose': False, 'preprocess': ColumnTransformer(remainder='passthrough',
                  transformers=[('stand', StandardScaler(),
                                 [1, 16, 8, 17, 18, 19, 20, 21])],
                  verbose_feature_names_out=False), 'model': XGBClassifier(alpha=0.06894819970410404, booster='dart',
              eta=0.09428791561963863, gamma=0.1663660901938827,
              lambda=0.9468305193894822, max_depth=2, missing=nan,
              n_estimators=94, scale_pos_weight=0.4, subsample=0.25), 'preprocess__n_jobs': None, 'preprocess__remainder': 'passthrough', 'preprocess__sparse_threshold': 0.3, 'preprocess__transformer_weights': None, 'preprocess__transformers': [('stand', StandardScaler(), [1, 16, 8, 17, 18, 19, 20, 21])], 'preprocess__verbose': False, 'preprocess__verbose_feature_names_out': False, 'preprocess__stand': StandardScaler(), 'preprocess__stand__copy': True, 'preprocess__stand__with_mean': True, 'preprocess__stand__with_std': True, 'model__base_score': 0.5, 'model__booster': 'dart', 'model__colsample_bylevel': 1, 'model__colsample_bynode': 1, 'model__colsample_bytree': 1, 'model__gamma': 0.1663660901938827, 'model__learning_rate': 0.1, 'model__max_delta_step': 0, 'model__max_depth': 2, 'model__min_child_weight': 1, 'model__missing': nan, 'model__n_estimators': 94, 'model__n_jobs': 1, 'model__nthread': None, 'model__objective': 'binary:logistic', 'model__random_state': 0, 'model__reg_alpha': 0, 'model__reg_lambda': 1, 'model__scale_pos_weight': 0.4, 'model__seed': None, 'model__silent': None, 'model__subsample': 0.25, 'model__verbosity': 1, 'model__alpha': 0.06894819970410404, 'model__eta': 0.09428791561963863, 'model__lambda': 0.9468305193894822}
####################   xgb  END   #########################
